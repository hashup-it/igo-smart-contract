/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GoldCartridgeTokenV0,
  GoldCartridgeTokenV0Interface,
} from "../GoldCartridgeTokenV0";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_initialAmount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_tokenName",
        type: "string",
      },
      {
        internalType: "string",
        name: "_tokenSymbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_feeForCreator",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_metadataUrl",
        type: "string",
      },
      {
        internalType: "address",
        name: "_hashUpIGO",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "HashUpWallet",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "remaining",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "creator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeDecimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeForCreator",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feesCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
    ],
    name: "getAmountAfterFees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hashUpIGO",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "metadata",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_metadataURL",
        type: "string",
      },
    ],
    name: "setMetadata",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052735e798ce8e53a3fe16842c233e8802dc3b09a8451600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503480156200006657600080fd5b50604051620023fb380380620023fb83398181016040528101906200008c919062000496565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002600a620000dc91906200065f565b62020a44620000ec91906200079c565b6001819055506001600a6200010291906200065f565b60056200011091906200079c565b6002819055506001548611156200012657600080fd5b60008311801562000138575060025483105b6200014257600080fd5b85600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555085600a819055508460049080519060200190620001a592919062000346565b508360059080519060200190620001be92919062000346565b508260068190555081600b9080519060200190620001de92919062000346565b5080600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000245620002346200025160201b60201c565b6200027a60201b62000f911760201c565b505050505050620009c9565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6200031a8160405160240162000291919062000588565b6040516020818303038152906040527f2c2ecbc2000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506200031d60201b60201c565b50565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b82805462000354906200087e565b90600052602060002090601f016020900481019282620003785760008555620003c4565b82601f106200039357805160ff1916838001178555620003c4565b82800160010185558215620003c4579182015b82811115620003c3578251825591602001919060010190620003a6565b5b509050620003d39190620003d7565b5090565b5b80821115620003f2576000816000905550600101620003d8565b5090565b60006200040d6200040784620005ce565b620005a5565b9050828152602081018484840111156200042657600080fd5b6200043384828562000848565b509392505050565b6000815190506200044c8162000995565b92915050565b600082601f8301126200046457600080fd5b815162000476848260208601620003f6565b91505092915050565b6000815190506200049081620009af565b92915050565b60008060008060008060c08789031215620004b057600080fd5b6000620004c089828a016200047f565b965050602087015167ffffffffffffffff811115620004de57600080fd5b620004ec89828a0162000452565b955050604087015167ffffffffffffffff8111156200050a57600080fd5b6200051889828a0162000452565b94505060606200052b89828a016200047f565b935050608087015167ffffffffffffffff8111156200054957600080fd5b6200055789828a0162000452565b92505060a06200056a89828a016200043b565b9150509295509295509295565b6200058281620007fd565b82525050565b60006020820190506200059f600083018462000577565b92915050565b6000620005b1620005c4565b9050620005bf8282620008b4565b919050565b6000604051905090565b600067ffffffffffffffff821115620005ec57620005eb62000948565b5b620005f78262000977565b9050602081019050919050565b6000808291508390505b600185111562000656578086048111156200062e576200062d620008ea565b5b60018516156200063e5780820291505b80810290506200064e8562000988565b94506200060e565b94509492505050565b60006200066c8262000831565b915062000679836200083b565b9250620006a87fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484620006b0565b905092915050565b600082620006c2576001905062000795565b81620006d2576000905062000795565b8160018114620006eb5760028114620006f6576200072c565b600191505062000795565b60ff8411156200070b576200070a620008ea565b5b8360020a915084821115620007255762000724620008ea565b5b5062000795565b5060208310610133831016604e8410600b8410161715620007665782820a90508381111562000760576200075f620008ea565b5b62000795565b62000775848484600162000604565b925090508184048111156200078f576200078e620008ea565b5b81810290505b9392505050565b6000620007a98262000831565b9150620007b68362000831565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615620007f257620007f1620008ea565b5b828202905092915050565b60006200080a8262000811565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015620008685780820151818401526020810190506200084b565b8381111562000878576000848401525b50505050565b600060028204905060018216806200089757607f821691505b60208210811415620008ae57620008ad62000919565b5b50919050565b620008bf8262000977565b810181811067ffffffffffffffff82111715620008e157620008e062000948565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b60008160011c9050919050565b620009a081620007fd565b8114620009ac57600080fd5b50565b620009ba8162000831565b8114620009c657600080fd5b50565b611a2280620009d96000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c80635c658165116100ad578063a9059cbb11610071578063a9059cbb14610372578063b94f4778146103a2578063cc0f1786146103c0578063dd62ed3e146103de578063e9da0e6c1461040e5761012c565b80635c658165146102a657806370a08231146102d6578063922f695f1461030657806395d89b4114610324578063a49a1e7d146103425761012c565b806327e235e3116100f457806327e235e3146101eb578063313ce5671461021b578063392f37e91461023957806341b6a8371461025757806354c3db4e146102885761012c565b806302d05d3f1461013157806306fdde031461014f578063095ea7b31461016d57806318160ddd1461019d57806323b872dd146101bb575b600080fd5b61013961042c565b604051610146919061146c565b60405180910390f35b610157610455565b60405161016491906114a2565b60405180910390f35b610187600480360381019061018291906112d5565b6104e3565b6040516101949190611487565b60405180910390f35b6101a5610613565b6040516101b29190611524565b60405180910390f35b6101d560048036038101906101d09190611286565b610619565b6040516101e29190611487565b60405180910390f35b61020560048036038101906102009190611221565b61098b565b6040516102129190611524565b60405180910390f35b6102236109a3565b6040516102309190611568565b60405180910390f35b6102416109a8565b60405161024e91906114a2565b60405180910390f35b610271600480360381019061026c9190611352565b610a36565b60405161027f92919061153f565b60405180910390f35b610290610ada565b60405161029d919061146c565b60405180910390f35b6102c060048036038101906102bb919061124a565b610b00565b6040516102cd9190611524565b60405180910390f35b6102f060048036038101906102eb9190611221565b610b25565b6040516102fd9190611524565b60405180910390f35b61030e610b6e565b60405161031b919061146c565b60405180910390f35b61032c610b94565b60405161033991906114a2565b60405180910390f35b61035c60048036038101906103579190611311565b610c22565b60405161036991906114a2565b60405180910390f35b61038c600480360381019061038791906112d5565b610cd1565b6040516103999190611487565b60405180910390f35b6103aa610ef9565b6040516103b79190611524565b60405180910390f35b6103c8610eff565b6040516103d59190611568565b60405180910390f35b6103f860048036038101906103f3919061124a565b610f04565b6040516104059190611524565b60405180910390f35b610416610f8b565b6040516104239190611524565b60405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60048054610462906117a1565b80601f016020809104026020016040519081016040528092919081815260200182805461048e906117a1565b80156104db5780601f106104b0576101008083540402835291602001916104db565b820191906000526020600020905b8154815290600101906020018083116104be57829003601f168201915b505050505081565b60006105236040518060400160405280600281526020017f584400000000000000000000000000000000000000000000000000000000000081525061102a565b81600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516106019190611524565b60405180910390a36001905092915050565b600a5481565b600080600960008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082600860008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101580156106ea5750828110155b610729576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072090611504565b60405180910390fd5b6000806107368588610a36565b9150915084600860008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461078991906116d6565b9250508190555081600860008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107df91906115f5565b9250508190555080600c60008282546107f891906115f5565b92505081905550806008600061080c61042c565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461085591906115f5565b925050819055507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8310156109185784600960008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461091091906116d6565b925050819055505b8573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef876040516109759190611524565b60405180910390a3600193505050509392505050565b60086020528060005260406000206000915090505481565b600281565b600b80546109b5906117a1565b80601f01602080910402602001604051908101604052809291908181526020018280546109e1906117a1565b8015610a2e5780601f10610a0357610100808354040283529160200191610a2e565b820191906000526020600020905b815481529060010190602001808311610a1157829003601f168201915b505050505081565b600080600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a9b5783600091509150610ad3565b60006103e860065486610aae919061167c565b610ab8919061164b565b905060008186610ac891906116d6565b905080829350935050505b9250929050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6009602052816000526040600020602052806000526040600020600091509150505481565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60058054610ba1906117a1565b80601f0160208091040260200160405190810160405280929190818152602001828054610bcd906117a1565b8015610c1a5780601f10610bef57610100808354040283529160200191610c1a565b820191906000526020600020905b815481529060010190602001808311610bfd57829003601f168201915b505050505081565b606060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610cb2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ca9906114e4565b60405180910390fd5b81600b9080519060200190610cc89291906110ec565b50819050919050565b600081600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610d55576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d4c906114c4565b60405180910390fd5b600080610d628433610a36565b9150915083600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610db591906116d6565b9250508190555081600860008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e0b91906115f5565b9250508190555080600c6000828254610e2491906115f5565b925050819055508060086000610e3861042c565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e8191906115f5565b925050819055508473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef86604051610ee59190611524565b60405180910390a360019250505092915050565b600c5481565b600181565b6000600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60065481565b61102781604051602401610fa5919061146c565b6040516020818303038152906040527f2c2ecbc2000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506110c3565b50565b6110c08160405160240161103e91906114a2565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506110c3565b50565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b8280546110f8906117a1565b90600052602060002090601f01602090048101928261111a5760008555611161565b82601f1061113357805160ff1916838001178555611161565b82800160010185558215611161579182015b82811115611160578251825591602001919060010190611145565b5b50905061116e9190611172565b5090565b5b8082111561118b576000816000905550600101611173565b5090565b60006111a261119d846115a8565b611583565b9050828152602081018484840111156111ba57600080fd5b6111c584828561175f565b509392505050565b6000813590506111dc816119be565b92915050565b600082601f8301126111f357600080fd5b813561120384826020860161118f565b91505092915050565b60008135905061121b816119d5565b92915050565b60006020828403121561123357600080fd5b6000611241848285016111cd565b91505092915050565b6000806040838503121561125d57600080fd5b600061126b858286016111cd565b925050602061127c858286016111cd565b9150509250929050565b60008060006060848603121561129b57600080fd5b60006112a9868287016111cd565b93505060206112ba868287016111cd565b92505060406112cb8682870161120c565b9150509250925092565b600080604083850312156112e857600080fd5b60006112f6858286016111cd565b92505060206113078582860161120c565b9150509250929050565b60006020828403121561132357600080fd5b600082013567ffffffffffffffff81111561133d57600080fd5b611349848285016111e2565b91505092915050565b6000806040838503121561136557600080fd5b60006113738582860161120c565b9250506020611384858286016111cd565b9150509250929050565b6113978161170a565b82525050565b6113a68161171c565b82525050565b60006113b7826115d9565b6113c181856115e4565b93506113d181856020860161176e565b6113da816118c0565b840191505092915050565b60006113f2602f836115e4565b91506113fd826118d1565b604082019050919050565b60006114156027836115e4565b915061142082611920565b604082019050919050565b60006114386039836115e4565b91506114438261196f565b604082019050919050565b61145781611748565b82525050565b61146681611752565b82525050565b6000602082019050611481600083018461138e565b92915050565b600060208201905061149c600083018461139d565b92915050565b600060208201905081810360008301526114bc81846113ac565b905092915050565b600060208201905081810360008301526114dd816113e5565b9050919050565b600060208201905081810360008301526114fd81611408565b9050919050565b6000602082019050818103600083015261151d8161142b565b9050919050565b6000602082019050611539600083018461144e565b92915050565b6000604082019050611554600083018561144e565b611561602083018461144e565b9392505050565b600060208201905061157d600083018461145d565b92915050565b600061158d61159e565b905061159982826117d3565b919050565b6000604051905090565b600067ffffffffffffffff8211156115c3576115c2611891565b5b6115cc826118c0565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600061160082611748565b915061160b83611748565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156116405761163f611804565b5b828201905092915050565b600061165682611748565b915061166183611748565b92508261167157611670611833565b5b828204905092915050565b600061168782611748565b915061169283611748565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156116cb576116ca611804565b5b828202905092915050565b60006116e182611748565b91506116ec83611748565b9250828210156116ff576116fe611804565b5b828203905092915050565b600061171582611728565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b82818337600083830152505050565b60005b8381101561178c578082015181840152602081019050611771565b8381111561179b576000848401525b50505050565b600060028204905060018216806117b957607f821691505b602082108114156117cd576117cc611862565b5b50919050565b6117dc826118c0565b810181811067ffffffffffffffff821117156117fb576117fa611891565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f746f6b656e2062616c616e6365206973206c6f776572207468616e207468652060008201527f76616c7565207265717565737465640000000000000000000000000000000000602082015250565b7f4361727472646967654f776e61626c653a2043616c6c6572206973206e6f742060008201527f63726561746f7200000000000000000000000000000000000000000000000000602082015250565b7f746f6b656e2062616c616e6365206f7220616c6c6f77616e6365206973206c6f60008201527f776572207468616e20616d6f756e742072657175657374656400000000000000602082015250565b6119c78161170a565b81146119d257600080fd5b50565b6119de81611748565b81146119e957600080fd5b5056fea2646970667358221220cce5115dab5a1bcaf59b27e8962f2f8f6105a2e0cdad4f19c4eef8e72f2288c864736f6c63430008040033";

export class GoldCartridgeTokenV0__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _initialAmount: BigNumberish,
    _tokenName: string,
    _tokenSymbol: string,
    _feeForCreator: BigNumberish,
    _metadataUrl: string,
    _hashUpIGO: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GoldCartridgeTokenV0> {
    return super.deploy(
      _initialAmount,
      _tokenName,
      _tokenSymbol,
      _feeForCreator,
      _metadataUrl,
      _hashUpIGO,
      overrides || {}
    ) as Promise<GoldCartridgeTokenV0>;
  }
  getDeployTransaction(
    _initialAmount: BigNumberish,
    _tokenName: string,
    _tokenSymbol: string,
    _feeForCreator: BigNumberish,
    _metadataUrl: string,
    _hashUpIGO: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _initialAmount,
      _tokenName,
      _tokenSymbol,
      _feeForCreator,
      _metadataUrl,
      _hashUpIGO,
      overrides || {}
    );
  }
  attach(address: string): GoldCartridgeTokenV0 {
    return super.attach(address) as GoldCartridgeTokenV0;
  }
  connect(signer: Signer): GoldCartridgeTokenV0__factory {
    return super.connect(signer) as GoldCartridgeTokenV0__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GoldCartridgeTokenV0Interface {
    return new utils.Interface(_abi) as GoldCartridgeTokenV0Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GoldCartridgeTokenV0 {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as GoldCartridgeTokenV0;
  }
}
