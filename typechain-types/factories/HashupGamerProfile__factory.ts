/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  HashupGamerProfile,
  HashupGamerProfileInterface,
} from "../HashupGamerProfile";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "newNickname",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "newColor",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "newAvatar",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "newDescription",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "newSocials",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "referrer",
        type: "address",
      },
    ],
    name: "UpdateProfile",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "gotReward",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "nicknameOwners",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "pointsEarned",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "profiles",
    outputs: [
      {
        internalType: "string",
        name: "nickname",
        type: "string",
      },
      {
        internalType: "string",
        name: "color",
        type: "string",
      },
      {
        internalType: "string",
        name: "avatar",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "string",
        name: "socials",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_nickname",
        type: "string",
      },
      {
        internalType: "string",
        name: "_color",
        type: "string",
      },
      {
        internalType: "string",
        name: "_avatar",
        type: "string",
      },
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
      {
        internalType: "string",
        name: "_socials",
        type: "string",
      },
      {
        internalType: "address",
        name: "_refferer",
        type: "address",
      },
    ],
    name: "updateProfile",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506112a5806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80634b8fc7d31461005c57806350f4f7e71461008c5780635398a74f146100bc578063bbe15627146100ec578063e22b125b14610120575b600080fd5b61007660048036038101906100719190610b7d565b61013c565b6040516100839190610f6a565b60405180910390f35b6100a660048036038101906100a19190610b7d565b610154565b6040516100b39190610ed9565b60405180910390f35b6100d660048036038101906100d19190610ba6565b610174565b6040516100e39190610e2c565b60405180910390f35b61010660048036038101906101019190610b7d565b6101bd565b604051610117959493929190610ef4565b60405180910390f35b61013a60048036038101906101359190610be7565b61049b565b005b60016020528060005260406000206000915090505481565b60006020528060005260406000206000915054906101000a900460ff1681565b6002818051602081018201805184825260208301602085012081835280955050505050506000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60036020528060005260406000206000915090508060000180546101e090611128565b80601f016020809104026020016040519081016040528092919081815260200182805461020c90611128565b80156102595780601f1061022e57610100808354040283529160200191610259565b820191906000526020600020905b81548152906001019060200180831161023c57829003601f168201915b50505050509080600101805461026e90611128565b80601f016020809104026020016040519081016040528092919081815260200182805461029a90611128565b80156102e75780601f106102bc576101008083540402835291602001916102e7565b820191906000526020600020905b8154815290600101906020018083116102ca57829003601f168201915b5050505050908060020180546102fc90611128565b80601f016020809104026020016040519081016040528092919081815260200182805461032890611128565b80156103755780601f1061034a57610100808354040283529160200191610375565b820191906000526020600020905b81548152906001019060200180831161035857829003601f168201915b50505050509080600301805461038a90611128565b80601f01602080910402602001604051908101604052809291908181526020018280546103b690611128565b80156104035780601f106103d857610100808354040283529160200191610403565b820191906000526020600020905b8154815290600101906020018083116103e657829003601f168201915b50505050509080600401805461041890611128565b80601f016020809104026020016040519081016040528092919081815260200182805461044490611128565b80156104915780601f1061046657610100808354040283529160200191610491565b820191906000526020600020905b81548152906001019060200180831161047457829003601f168201915b5050505050905085565b6104a48661081c565b81600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040190805190602001906104fa929190610a5d565b5082600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003019080519060200190610551929190610a5d565b5084600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010190805190602001906105a8929190610a5d565b5083600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020190805190602001906105ff929190610a5d565b506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166107d15760016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600a600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106f79190611017565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415801561076757503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b156107d0576002600a61077a919061106d565b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107c89190611017565b925050819055505b5b7f6f7e33014f1ae8cf30e6eeca5b35d0ee89a8534edab3d2332545a4f3cce114b93387878787878760405161080c9796959493929190610e47565b60405180910390a1505050505050565b600073ffffffffffffffffffffffffffffffffffffffff166002826040516108449190610dfe565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806108fe57503373ffffffffffffffffffffffffffffffffffffffff166002826040516108b79190610dfe565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b61090757600080fd5b60006002600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160405161095a9190610e15565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000190805190602001906109fc929190610a5d565b5033600282604051610a0e9190610dfe565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b828054610a6990611128565b90600052602060002090601f016020900481019282610a8b5760008555610ad2565b82601f10610aa457805160ff1916838001178555610ad2565b82800160010185558215610ad2579182015b82811115610ad1578251825591602001919060010190610ab6565b5b509050610adf9190610ae3565b5090565b5b80821115610afc576000816000905550600101610ae4565b5090565b6000610b13610b0e84610faa565b610f85565b905082815260208101848484011115610b2b57600080fd5b610b368482856110e6565b509392505050565b600081359050610b4d81611258565b92915050565b600082601f830112610b6457600080fd5b8135610b74848260208601610b00565b91505092915050565b600060208284031215610b8f57600080fd5b6000610b9d84828501610b3e565b91505092915050565b600060208284031215610bb857600080fd5b600082013567ffffffffffffffff811115610bd257600080fd5b610bde84828501610b53565b91505092915050565b60008060008060008060c08789031215610c0057600080fd5b600087013567ffffffffffffffff811115610c1a57600080fd5b610c2689828a01610b53565b965050602087013567ffffffffffffffff811115610c4357600080fd5b610c4f89828a01610b53565b955050604087013567ffffffffffffffff811115610c6c57600080fd5b610c7889828a01610b53565b945050606087013567ffffffffffffffff811115610c9557600080fd5b610ca189828a01610b53565b935050608087013567ffffffffffffffff811115610cbe57600080fd5b610cca89828a01610b53565b92505060a0610cdb89828a01610b3e565b9150509295509295509295565b610cf18161109e565b82525050565b610d00816110b0565b82525050565b6000610d1182610ff0565b610d1b8185610ffb565b9350610d2b8185602086016110f5565b610d3481611247565b840191505092915050565b6000610d4a82610ff0565b610d54818561100c565b9350610d648185602086016110f5565b80840191505092915050565b60008154610d7d81611128565b610d87818661100c565b94506001821660008114610da25760018114610db357610de6565b60ff19831686528186019350610de6565b610dbc85610fdb565b60005b83811015610dde57815481890152600182019150602081019050610dbf565b838801955050505b50505092915050565b610df8816110dc565b82525050565b6000610e0a8284610d3f565b915081905092915050565b6000610e218284610d70565b915081905092915050565b6000602082019050610e416000830184610ce8565b92915050565b600060e082019050610e5c600083018a610ce8565b8181036020830152610e6e8189610d06565b90508181036040830152610e828188610d06565b90508181036060830152610e968187610d06565b90508181036080830152610eaa8186610d06565b905081810360a0830152610ebe8185610d06565b9050610ecd60c0830184610ce8565b98975050505050505050565b6000602082019050610eee6000830184610cf7565b92915050565b600060a0820190508181036000830152610f0e8188610d06565b90508181036020830152610f228187610d06565b90508181036040830152610f368186610d06565b90508181036060830152610f4a8185610d06565b90508181036080830152610f5e8184610d06565b90509695505050505050565b6000602082019050610f7f6000830184610def565b92915050565b6000610f8f610fa0565b9050610f9b828261115a565b919050565b6000604051905090565b600067ffffffffffffffff821115610fc557610fc4611218565b5b610fce82611247565b9050602081019050919050565b60008190508160005260206000209050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b6000611022826110dc565b915061102d836110dc565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156110625761106161118b565b5b828201905092915050565b6000611078826110dc565b9150611083836110dc565b925082611093576110926111ba565b5b828204905092915050565b60006110a9826110bc565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156111135780820151818401526020810190506110f8565b83811115611122576000848401525b50505050565b6000600282049050600182168061114057607f821691505b60208210811415611154576111536111e9565b5b50919050565b61116382611247565b810181811067ffffffffffffffff8211171561118257611181611218565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b6112618161109e565b811461126c57600080fd5b5056fea2646970667358221220f4bbbffdd04ac5b6011816b8e8072998e5c8fd3a3e7517f70d24f3260d9c424364736f6c63430008040033";

export class HashupGamerProfile__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<HashupGamerProfile> {
    return super.deploy(overrides || {}) as Promise<HashupGamerProfile>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): HashupGamerProfile {
    return super.attach(address) as HashupGamerProfile;
  }
  connect(signer: Signer): HashupGamerProfile__factory {
    return super.connect(signer) as HashupGamerProfile__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HashupGamerProfileInterface {
    return new utils.Interface(_abi) as HashupGamerProfileInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HashupGamerProfile {
    return new Contract(address, _abi, signerOrProvider) as HashupGamerProfile;
  }
}
