/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { HashupIGO, HashupIGOInterface } from "../HashupIGO";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "cartridgeAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "Buy",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "cartridgeAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "paymentTokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Sale",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "cartridgeAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "burnFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_cartridgeAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "buyCartridge",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_cartridgeAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_referrer",
        type: "address",
      },
    ],
    name: "buyCartridge",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_totalValue",
        type: "uint256",
      },
    ],
    name: "distributePayment",
    outputs: [
      {
        internalType: "uint256",
        name: "toCreator",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "toBurn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "toReferrer",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_cartridgeAddress",
        type: "address",
      },
    ],
    name: "getCartridgePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_cartridgeAddress",
        type: "address",
      },
    ],
    name: "getPaymentToken",
    outputs: [
      {
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "raisedAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "reflinkAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reflinkFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_cartridgeAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_paymentTokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "setCartridgeForSale",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_cartridgeAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdrawCartridges",
    outputs: [
      {
        internalType: "uint256",
        name: "withdrawnAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061148a806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80636aab262a116100715780636aab262a146101a057806370c71e00146101d05780638dbc8343146101ee578063c7cc5f161461021e578063e6c15e961461024e578063fce589d81461027e576100a9565b8063038bf1e7146100ae5780630ba4f01f146100de5780631ba291251461010e57806330e190b2146101405780633600677714610170575b600080fd5b6100c860048036038101906100c39190610f96565b61029c565b6040516100d59190611167565b60405180910390f35b6100f860048036038101906100f39190610fd2565b6104f1565b6040516101059190611167565b60405180910390f35b6101286004803603810190610123919061104a565b610817565b604051610137939291906111bd565b60405180910390f35b61015a60048036038101906101559190610ee1565b610883565b60405161016791906111a2565b60405180910390f35b61018a60048036038101906101859190610ee1565b61089b565b60405161019791906111a2565b60405180910390f35b6101ba60048036038101906101b59190610ee1565b6108e7565b6040516101c791906111a2565b60405180910390f35b6101d86108ff565b6040516101e591906111a2565b60405180910390f35b61020860048036038101906102039190610ee1565b610904565b60405161021591906110ec565b60405180910390f35b61023860048036038101906102339190610f96565b610970565b60405161024591906111a2565b60405180910390f35b61026860048036038101906102639190610f33565b610c2a565b6040516102759190611167565b60405180910390f35b610286610e73565b60405161029391906111a2565b60405180910390f35b6000806102a884610904565b905060008490506000846102bb8761089b565b6102c5919061128c565b905060008060006102d584610817565b9250925092508473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb338a6040518363ffffffff1660e01b815260040161031692919061113e565b602060405180830381600087803b15801561033057600080fd5b505af1158015610344573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103689190611021565b508573ffffffffffffffffffffffffffffffffffffffff166323b872dd338773ffffffffffffffffffffffffffffffffffffffff166302d05d3f6040518163ffffffff1660e01b815260040160206040518083038186803b1580156103cc57600080fd5b505afa1580156103e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104049190610f0a565b84876104109190611205565b6040518463ffffffff1660e01b815260040161042e93929190611107565b602060405180830381600087803b15801561044857600080fd5b505af115801561045c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104809190611021565b50808361048d9190611205565b6000808b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104da9190611205565b925050819055506001965050505050505092915050565b6000806104fd85610904565b905060008590506000856105108861089b565b61051a919061128c565b9050600080600061052a84610817565b9250925092508473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb338b6040518363ffffffff1660e01b815260040161056b92919061113e565b602060405180830381600087803b15801561058557600080fd5b505af1158015610599573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105bd9190611021565b508573ffffffffffffffffffffffffffffffffffffffff166323b872dd338773ffffffffffffffffffffffffffffffffffffffff166302d05d3f6040518163ffffffff1660e01b815260040160206040518083038186803b15801561062157600080fd5b505afa158015610635573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106599190610f0a565b866040518463ffffffff1660e01b815260040161067893929190611107565b602060405180830381600087803b15801561069257600080fd5b505af11580156106a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ca9190611021565b508573ffffffffffffffffffffffffffffffffffffffff166323b872dd338a846040518463ffffffff1660e01b815260040161070893929190611107565b602060405180830381600087803b15801561072257600080fd5b505af1158015610736573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075a9190611021565b50826000808c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107a99190611205565b9250508190555080600160008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107ff9190611205565b92505081905550600196505050505050509392505050565b6000806000806064600a8661082c919061128c565b610836919061125b565b905060006064600387610849919061128c565b610853919061125b565b9050600082828861086491906112e6565b61086e91906112e6565b90508083839550955095505050509193909250565b60006020528060005260406000206000915090505481565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050919050565b60016020528060005260406000206000915090505481565b600381565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000828073ffffffffffffffffffffffffffffffffffffffff166302d05d3f6040518163ffffffff1660e01b815260040160206040518083038186803b1580156109b957600080fd5b505afa1580156109cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f19190610f0a565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a5e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5590611182565b60405180910390fd5b600084905060008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610a9e91906110ec565b60206040518083038186803b158015610ab657600080fd5b505afa158015610aca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aee9190611073565b9050848110610b8f578173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33876040518363ffffffff1660e01b8152600401610b3292919061113e565b602060405180830381600087803b158015610b4c57600080fd5b505af1158015610b60573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b849190611021565b508493505050610c23565b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610bca92919061113e565b602060405180830381600087803b158015610be457600080fd5b505af1158015610bf8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c1c9190611021565b5080935050505b5092915050565b6000848073ffffffffffffffffffffffffffffffffffffffff166302d05d3f6040518163ffffffff1660e01b815260040160206040518083038186803b158015610c7357600080fd5b505afa158015610c87573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cab9190610f0a565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d18576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0f90611182565b60405180910390fd5b8573ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b8152600401610d5593929190611107565b602060405180830381600087803b158015610d6f57600080fd5b505af1158015610d83573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610da79190611021565b5060405180604001604052808673ffffffffffffffffffffffffffffffffffffffff16815260200185815250600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101559050506001915050949350505050565b600a81565b600081359050610e878161140f565b92915050565b600081519050610e9c8161140f565b92915050565b600081519050610eb181611426565b92915050565b600081359050610ec68161143d565b92915050565b600081519050610edb8161143d565b92915050565b600060208284031215610ef357600080fd5b6000610f0184828501610e78565b91505092915050565b600060208284031215610f1c57600080fd5b6000610f2a84828501610e8d565b91505092915050565b60008060008060808587031215610f4957600080fd5b6000610f5787828801610e78565b9450506020610f6887828801610e78565b9350506040610f7987828801610eb7565b9250506060610f8a87828801610eb7565b91505092959194509250565b60008060408385031215610fa957600080fd5b6000610fb785828601610e78565b9250506020610fc885828601610eb7565b9150509250929050565b600080600060608486031215610fe757600080fd5b6000610ff586828701610e78565b935050602061100686828701610eb7565b925050604061101786828701610e78565b9150509250925092565b60006020828403121561103357600080fd5b600061104184828501610ea2565b91505092915050565b60006020828403121561105c57600080fd5b600061106a84828501610eb7565b91505092915050565b60006020828403121561108557600080fd5b600061109384828501610ecc565b91505092915050565b6110a58161131a565b82525050565b6110b48161132c565b82525050565b60006110c76025836111f4565b91506110d2826113c0565b604082019050919050565b6110e681611358565b82525050565b6000602082019050611101600083018461109c565b92915050565b600060608201905061111c600083018661109c565b611129602083018561109c565b61113660408301846110dd565b949350505050565b6000604082019050611153600083018561109c565b61116060208301846110dd565b9392505050565b600060208201905061117c60008301846110ab565b92915050565b6000602082019050818103600083015261119b816110ba565b9050919050565b60006020820190506111b760008301846110dd565b92915050565b60006060820190506111d260008301866110dd565b6111df60208301856110dd565b6111ec60408301846110dd565b949350505050565b600082825260208201905092915050565b600061121082611358565b915061121b83611358565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156112505761124f611362565b5b828201905092915050565b600061126682611358565b915061127183611358565b92508261128157611280611391565b5b828204905092915050565b600061129782611358565b91506112a283611358565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156112db576112da611362565b5b828202905092915050565b60006112f182611358565b91506112fc83611358565b92508282101561130f5761130e611362565b5b828203905092915050565b600061132582611338565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f48617368757049474f3a204d757374206265204361727472696467652063726560008201527f61746f722e000000000000000000000000000000000000000000000000000000602082015250565b6114188161131a565b811461142357600080fd5b50565b61142f8161132c565b811461143a57600080fd5b50565b61144681611358565b811461145157600080fd5b5056fea264697066735822122031619b72df4226c3df46d0701e040aee182d3edaf0ec89252a9232f696cb5abb64736f6c63430008040033";

export class HashupIGO__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<HashupIGO> {
    return super.deploy(overrides || {}) as Promise<HashupIGO>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): HashupIGO {
    return super.attach(address) as HashupIGO;
  }
  connect(signer: Signer): HashupIGO__factory {
    return super.connect(signer) as HashupIGO__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HashupIGOInterface {
    return new utils.Interface(_abi) as HashupIGOInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HashupIGO {
    return new Contract(address, _abi, signerOrProvider) as HashupIGO;
  }
}
