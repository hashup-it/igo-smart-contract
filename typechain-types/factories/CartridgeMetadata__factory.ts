/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CartridgeMetadata,
  CartridgeMetadataInterface,
} from "../CartridgeMetadata";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "string",
        name: "metadataUrl_",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "totalSupply_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "color",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "metadataUrl",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newMetadata",
        type: "string",
      },
    ],
    name: "setMetadata",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620014da380380620014da83398181016040528101906200003791906200040a565b620000576200004b620000d560201b60201c565b620000dd60201b60201c565b83600190805190602001906200006f929190620002d1565b50826002908051906020019062000088929190620002d1565b508160049080519060200190620000a1929190620002d1565b50620000b381620001a160201b60201c565b60039080519060200190620000ca929190620002d1565b505050505062000897565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6060620001b3620002c860201b60201c565b600a620001c191906200057b565b62020a44620001d19190620006b8565b821162000216576040518060400160405280600481526020017f676f6c64000000000000000000000000000000000000000000000000000000008152509050620002c3565b62000226620002c860201b60201c565b600a6200023491906200057b565b6305f5e100620002459190620006b8565b82116200028a576040518060400160405280600481526020017f67726179000000000000000000000000000000000000000000000000000000008152509050620002c3565b6040518060400160405280600681526020017f637573746f6d000000000000000000000000000000000000000000000000000081525090505b919050565b60006002905090565b828054620002df9062000766565b90600052602060002090601f0160209004810192826200030357600085556200034f565b82601f106200031e57805160ff19168380011785556200034f565b828001600101855582156200034f579182015b828111156200034e57825182559160200191906001019062000331565b5b5090506200035e919062000362565b5090565b5b808211156200037d57600081600090555060010162000363565b5090565b6000620003986200039284620004ea565b620004c1565b905082815260208101848484011115620003b157600080fd5b620003be84828562000730565b509392505050565b600082601f830112620003d857600080fd5b8151620003ea84826020860162000381565b91505092915050565b60008151905062000404816200087d565b92915050565b600080600080608085870312156200042157600080fd5b600085015167ffffffffffffffff8111156200043c57600080fd5b6200044a87828801620003c6565b945050602085015167ffffffffffffffff8111156200046857600080fd5b6200047687828801620003c6565b935050604085015167ffffffffffffffff8111156200049457600080fd5b620004a287828801620003c6565b9250506060620004b587828801620003f3565b91505092959194509250565b6000620004cd620004e0565b9050620004db82826200079c565b919050565b6000604051905090565b600067ffffffffffffffff82111562000508576200050762000830565b5b62000513826200085f565b9050602081019050919050565b6000808291508390505b600185111562000572578086048111156200054a5762000549620007d2565b5b60018516156200055a5780820291505b80810290506200056a8562000870565b94506200052a565b94509492505050565b6000620005888262000719565b9150620005958362000723565b9250620005c47fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484620005cc565b905092915050565b600082620005de5760019050620006b1565b81620005ee5760009050620006b1565b8160018114620006075760028114620006125762000648565b6001915050620006b1565b60ff841115620006275762000626620007d2565b5b8360020a915084821115620006415762000640620007d2565b5b50620006b1565b5060208310610133831016604e8410600b8410161715620006825782820a9050838111156200067c576200067b620007d2565b5b620006b1565b62000691848484600162000520565b92509050818404811115620006ab57620006aa620007d2565b5b81810290505b9392505050565b6000620006c58262000719565b9150620006d28362000719565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156200070e576200070d620007d2565b5b828202905092915050565b6000819050919050565b600060ff82169050919050565b60005b838110156200075057808201518184015260208101905062000733565b8381111562000760576000848401525b50505050565b600060028204905060018216806200077f57607f821691505b6020821081141562000796576200079562000801565b5b50919050565b620007a7826200085f565b810181811067ffffffffffffffff82111715620007c957620007c862000830565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b60008160011c9050919050565b620008888162000719565b81146200089457600080fd5b50565b610c3380620008a76000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c806395d89b411161006657806395d89b41146100fc578063a49a1e7d1461011a578063cd29c71a14610136578063cf08fed514610154578063f2fde38b1461017257610093565b806306fdde0314610098578063313ce567146100b6578063715018a6146100d45780638da5cb5b146100de575b600080fd5b6100a061018e565b6040516100ad919061092c565b60405180910390f35b6100be610220565b6040516100cb919061098e565b60405180910390f35b6100dc610229565b005b6100e66102b1565b6040516100f39190610911565b60405180910390f35b6101046102da565b604051610111919061092c565b60405180910390f35b610134600480360381019061012f9190610833565b61036c565b005b61013e610402565b60405161014b919061092c565b60405180910390f35b61015c610494565b604051610169919061092c565b60405180910390f35b61018c6004803603810190610187919061080a565b610526565b005b60606001805461019d90610a9c565b80601f01602080910402602001604051908101604052809291908181526020018280546101c990610a9c565b80156102165780601f106101eb57610100808354040283529160200191610216565b820191906000526020600020905b8154815290600101906020018083116101f957829003601f168201915b5050505050905090565b60006002905090565b61023161061e565b73ffffffffffffffffffffffffffffffffffffffff1661024f6102b1565b73ffffffffffffffffffffffffffffffffffffffff16146102a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029c9061096e565b60405180910390fd5b6102af6000610626565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600280546102e990610a9c565b80601f016020809104026020016040519081016040528092919081815260200182805461031590610a9c565b80156103625780601f1061033757610100808354040283529160200191610362565b820191906000526020600020905b81548152906001019060200180831161034557829003601f168201915b5050505050905090565b61037461061e565b73ffffffffffffffffffffffffffffffffffffffff166103926102b1565b73ffffffffffffffffffffffffffffffffffffffff16146103e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103df9061096e565b60405180910390fd5b80600490805190602001906103fe9291906106ea565b5050565b60606004805461041190610a9c565b80601f016020809104026020016040519081016040528092919081815260200182805461043d90610a9c565b801561048a5780601f1061045f5761010080835404028352916020019161048a565b820191906000526020600020905b81548152906001019060200180831161046d57829003601f168201915b5050505050905090565b6060600380546104a390610a9c565b80601f01602080910402602001604051908101604052809291908181526020018280546104cf90610a9c565b801561051c5780601f106104f15761010080835404028352916020019161051c565b820191906000526020600020905b8154815290600101906020018083116104ff57829003601f168201915b5050505050905090565b61052e61061e565b73ffffffffffffffffffffffffffffffffffffffff1661054c6102b1565b73ffffffffffffffffffffffffffffffffffffffff16146105a2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105999061096e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610612576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106099061094e565b60405180910390fd5b61061b81610626565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b8280546106f690610a9c565b90600052602060002090601f016020900481019282610718576000855561075f565b82601f1061073157805160ff191683800117855561075f565b8280016001018555821561075f579182015b8281111561075e578251825591602001919060010190610743565b5b50905061076c9190610770565b5090565b5b80821115610789576000816000905550600101610771565b5090565b60006107a061079b846109ce565b6109a9565b9050828152602081018484840111156107b857600080fd5b6107c3848285610a5a565b509392505050565b6000813590506107da81610be6565b92915050565b600082601f8301126107f157600080fd5b813561080184826020860161078d565b91505092915050565b60006020828403121561081c57600080fd5b600061082a848285016107cb565b91505092915050565b60006020828403121561084557600080fd5b600082013567ffffffffffffffff81111561085f57600080fd5b61086b848285016107e0565b91505092915050565b61087d81610a1b565b82525050565b600061088e826109ff565b6108988185610a0a565b93506108a8818560208601610a69565b6108b181610b5d565b840191505092915050565b60006108c9602683610a0a565b91506108d482610b6e565b604082019050919050565b60006108ec602083610a0a565b91506108f782610bbd565b602082019050919050565b61090b81610a4d565b82525050565b60006020820190506109266000830184610874565b92915050565b600060208201905081810360008301526109468184610883565b905092915050565b60006020820190508181036000830152610967816108bc565b9050919050565b60006020820190508181036000830152610987816108df565b9050919050565b60006020820190506109a36000830184610902565b92915050565b60006109b36109c4565b90506109bf8282610ace565b919050565b6000604051905090565b600067ffffffffffffffff8211156109e9576109e8610b2e565b5b6109f282610b5d565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b6000610a2682610a2d565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600060ff82169050919050565b82818337600083830152505050565b60005b83811015610a87578082015181840152602081019050610a6c565b83811115610a96576000848401525b50505050565b60006002820490506001821680610ab457607f821691505b60208210811415610ac857610ac7610aff565b5b50919050565b610ad782610b5d565b810181811067ffffffffffffffff82111715610af657610af5610b2e565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b610bef81610a1b565b8114610bfa57600080fd5b5056fea26469706673582212201cfe449c7720d984113fcc155ed6d075cdd7b788ab4da118501ddbf73af977f264736f6c63430008040033";

export class CartridgeMetadata__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    name_: string,
    symbol_: string,
    metadataUrl_: string,
    totalSupply_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CartridgeMetadata> {
    return super.deploy(
      name_,
      symbol_,
      metadataUrl_,
      totalSupply_,
      overrides || {}
    ) as Promise<CartridgeMetadata>;
  }
  getDeployTransaction(
    name_: string,
    symbol_: string,
    metadataUrl_: string,
    totalSupply_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name_,
      symbol_,
      metadataUrl_,
      totalSupply_,
      overrides || {}
    );
  }
  attach(address: string): CartridgeMetadata {
    return super.attach(address) as CartridgeMetadata;
  }
  connect(signer: Signer): CartridgeMetadata__factory {
    return super.connect(signer) as CartridgeMetadata__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CartridgeMetadataInterface {
    return new utils.Interface(_abi) as CartridgeMetadataInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CartridgeMetadata {
    return new Contract(address, _abi, signerOrProvider) as CartridgeMetadata;
  }
}
