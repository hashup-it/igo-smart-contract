/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { USDTest, USDTestInterface } from "../USDTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_initialAmount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_tokenName",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "_decimalUnits",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "_tokenSymbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "remaining",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001d8438038062001d84833981810160405281019062000037919062000467565b6200006b7f422f82535f480dcd2567a3bfee4e514fc33ba8516fde62fcf17be3b9b0e1442660001b6200031460201b60201c565b6200009f7ffda446a7cf52d3ba3b6b6265280262cda98d927ce81e6d0a091b566d439d91b660001b6200031460201b60201c565b620000d37f0a5f50c6af30826a2e5967dab1ab3e72f44ced7ba56318e3a57f6b7ab8a1a66c60001b6200031460201b60201c565b836000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506200014a7fb1b566d498f6625a5559eda1b8f4a1b07733899e5ac63495c1a061388511e74660001b6200031460201b60201c565b6200017e7fdbe7a2a592198360fe24fddb37adb01297e3f41f8211a4d5bbb06c654ea5567560001b6200031460201b60201c565b83600281905550620001b97f096733d8fc93976ed5aa57a20406cb512a135fd2bd2add46dfe80503ae65cefe60001b6200031460201b60201c565b620001ed7f765ad7de1842232ae19ee52a4c399fd199f1b9c2592c74e7a9f37fc5779b8b2060001b6200031460201b60201c565b82600390805190602001906200020592919062000317565b506200023a7f16a72501ccca527868e3782657475f201aeb10c152bbea76131932ac0a88d07e60001b6200031460201b60201c565b6200026e7fa64a4ac34c0941776891b773963f6018ecc927b03bcbf782c9476a11e28d568360001b6200031460201b60201c565b81600460006101000a81548160ff021916908360ff160217905550620002bd7fde4c5993eea086735b2918198d2f06b61c402d375faf222157e08e43638781b460001b6200031460201b60201c565b620002f17f2c1042a17a4f89511fea70a38e24b77b5cdbe7280caa743c89195dde5fc715c060001b6200031460201b60201c565b80600590805190602001906200030992919062000317565b5050505050620006c0565b50565b8280546200032590620005b1565b90600052602060002090601f01602090048101928262000349576000855562000395565b82601f106200036457805160ff191683800117855562000395565b8280016001018555821562000395579182015b828111156200039457825182559160200191906001019062000377565b5b509050620003a49190620003a8565b5090565b5b80821115620003c3576000816000905550600101620003a9565b5090565b6000620003de620003d8846200052e565b62000505565b905082815260208101848484011115620003f757600080fd5b620004048482856200057b565b509392505050565b600082601f8301126200041e57600080fd5b815162000430848260208601620003c7565b91505092915050565b6000815190506200044a816200068c565b92915050565b6000815190506200046181620006a6565b92915050565b600080600080608085870312156200047e57600080fd5b60006200048e8782880162000439565b945050602085015167ffffffffffffffff811115620004ac57600080fd5b620004ba878288016200040c565b9350506040620004cd8782880162000450565b925050606085015167ffffffffffffffff811115620004eb57600080fd5b620004f9878288016200040c565b91505092959194509250565b60006200051162000524565b90506200051f8282620005e7565b919050565b6000604051905090565b600067ffffffffffffffff8211156200054c576200054b6200064c565b5b62000557826200067b565b9050602081019050919050565b6000819050919050565b600060ff82169050919050565b60005b838110156200059b5780820151818401526020810190506200057e565b83811115620005ab576000848401525b50505050565b60006002820490506001821680620005ca57607f821691505b60208210811415620005e157620005e06200061d565b5b50919050565b620005f2826200067b565b810181811067ffffffffffffffff821117156200061457620006136200064c565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b620006978162000564565b8114620006a357600080fd5b50565b620006b1816200056e565b8114620006bd57600080fd5b50565b6116b480620006d06000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063313ce56711610071578063313ce5671461017a5780635c6581651461019857806370a08231146101c857806395d89b41146101f8578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a57806327e235e31461014a575b600080fd5b6100b6610276565b6040516100c3919061134b565b60405180910390f35b6100e660048036038101906100e19190611248565b610304565b6040516100f39190611330565b60405180910390f35b61010461052a565b60405161011191906113ad565b60405180910390f35b610134600480360381019061012f91906111f9565b610530565b6040516101419190611330565b60405180910390f35b610164600480360381019061015f9190611194565b610ada565b60405161017191906113ad565b60405180910390f35b610182610af2565b60405161018f91906113c8565b60405180910390f35b6101b260048036038101906101ad91906111bd565b610b05565b6040516101bf91906113ad565b60405180910390f35b6101e260048036038101906101dd9190611194565b610b2a565b6040516101ef91906113ad565b60405180910390f35b610200610bf6565b60405161020d919061134b565b60405180910390f35b610230600480360381019061022b9190611248565b610c84565b60405161023d9190611330565b60405180910390f35b610260600480360381019061025b91906111bd565b61105c565b60405161026d91906113ad565b60405180910390f35b6003805461028390611511565b80601f01602080910402602001604051908101604052809291908181526020018280546102af90611511565b80156102fc5780601f106102d1576101008083540402835291602001916102fc565b820191906000526020600020905b8154815290600101906020018083116102df57829003601f168201915b505050505081565b60006103327fab28988c36fbd5fec4bbaa0142027a85797fc4ecea3b1744d996c6aac5dc8f8760001b611167565b61035e7f968ba508cb731cf8999b97cf5dc8ea4a0c554eb2f0e34881ae31758c3a2ae37f60001b611167565b61038a7fc7267990b54f2037b1de6e156073400886b3af38b3e07278ec8bf03933de344d60001b611167565b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506104377f97fd77eee5cbabf753bbc307c73edf27d0bd4e4c673b73e45a70a7788a2d6f6e60001b611167565b6104637f5831e85736beafb3555a793d2eb82d110d1c317b6a622458b71980235a49959f60001b611167565b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516104c091906113ad565b60405180910390a36104f47f176077a258558252bd21a19bbe4c4785adf842c49fbd187ce5687b8e9891c78260001b611167565b6105207f425d4c438dd95ed02864db7cae5d1f790a92dba1198f098fb112c54df593746c60001b611167565b6001905092915050565b60025481565b600061055e7f692d9964c26073b54ff079b02969c5e2e567eaafb061e08e88d8a58ce25c2aac60001b611167565b61058a7ffcbf58ede6751dec28dc8737e801609975d28e29a607ca5a33b2ec36df8491a260001b611167565b6105b67fd8b89e3aedfa9a7615d9009e98368711f641b595bf66ec5a8210951c1966dba960001b611167565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506106637f400e944be6d899aa634d6064f1df45739420145b280993ee5acd37252c41922460001b611167565b61068f7f1486db09c6e56b5c6521e48dc8579ec119d63ddbc527334cb09cae63165a451260001b611167565b6106bb7f685960c6cd06e832957faf64d0bf18462cb9cc22073473cb02475c2b32354bb260001b611167565b826000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101580156107095750828110155b610748576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073f9061138d565b60405180910390fd5b6107747f8957a2bd34cc5d966e4a08cbfbb4ec9560f7662c29159389282905a218473f0c60001b611167565b6107a07f1282446fe1c61405e869a2f340207670613852af429eb7dfdaea3bb14014829e60001b611167565b6107cc7fd36c3532b3a3ae5e8321036cdfc1a8d32152a41ace033b206ed75e3f47f8b51c60001b611167565b826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461081a91906113ff565b9250508190555061084d7f140f4d3b8672212776b8f6a1bc751f0def1046b340d277e09f3dad12fb958fa660001b611167565b6108797f8febb7cb0aca93eb7ea8a1ee8a7a41e1322a21e459bbdf288a75471ae248856a60001b611167565b826000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546108c79190611455565b925050819055506108fa7fdeaf47dc721125f190460ecdbaeaae5ec7e466885d5baaec7ee3caa51b9cdeca60001b611167565b6109267fde6969d8eaec64a4e39bd5a36ecc158ace5b86fcb84cceb4dd9a2f1c389b51ae60001b611167565b82600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109b29190611455565b925050819055506109e57f31f63e6219ee8860f57765b11c9b896aecfb21f60e8c498b20deb7324466788760001b611167565b610a117f154250ab62a427418e39aeccfbb1ada04289c8427557fdb6337288a1d819ba1a60001b611167565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef85604051610a6e91906113ad565b60405180910390a3610aa27f8ab4e629a4f83286e33361ecef3c2a646ff27e3c0054cba5f910f4ada4a7b44460001b611167565b610ace7f306c3b32a6c5c385d9c252a714dda28132b9b47f1ebfcd67359ac40f96260cc960001b611167565b60019150509392505050565b60006020528060005260406000206000915090505481565b600460009054906101000a900460ff1681565b6001602052816000526040600020602052806000526040600020600091509150505481565b6000610b587ff19a5b292b9481c4c29acea2fd36ad074461bf4491df8750bc831d4824c9822660001b611167565b610b847f13145e7b16644f9d3cf39c7083723a12fb189cf223999648fa635c32f8327f4960001b611167565b610bb07fb2263d2f238ad1094ed36225f4754e02b84a7ea2845c4acb413b0417b43fe45160001b611167565b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60058054610c0390611511565b80601f0160208091040260200160405190810160405280929190818152602001828054610c2f90611511565b8015610c7c5780601f10610c5157610100808354040283529160200191610c7c565b820191906000526020600020905b815481529060010190602001808311610c5f57829003601f168201915b505050505081565b6000610cb27f753bd529488c5dd1b0be2fd6a3c2c6acb5b10be6abbf634228be39a2ef54736360001b611167565b610cde7f0b1c21863938b3a0bdc262673890ae66895cf2077c22da32595eb8b377a8705960001b611167565b610d0a7f63a0ef5bdfeac6ed3690aa4cf3dd79587a86bc4d83e8e1fbf5783a94a8a631c960001b611167565b610d367fb0f523d066dea5d5b89a94a474b1acb104d8a85d50022ac7f4c84c6d82b31c1d60001b611167565b816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610db7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dae9061136d565b60405180910390fd5b610de37f444c2c94d24c64dd19a5feecda7edcccea7cc278742d90a48cbdc3f6711c1eeb60001b611167565b610e0f7f71eb361d03fe5fd46a7fd1b96cba7cf4be398ecb2a7d2dabd58a993a06ec068960001b611167565b610e3b7fb53dc42240bd0cbdcd43988078e3c3e2b02748db2e1e3f2ad9c75426057932dd60001b611167565b816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e899190611455565b92505081905550610ebc7f5bf705a3a407d177afa113bcf7bd889c21a946e6de9e04aa5a3593aad462fa8660001b611167565b610ee87ffe9d640569cdb341bf9ab80388064a2d2e3239b689a229dc65735909d2c2ab8360001b611167565b816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610f3691906113ff565b92505081905550610f697fe45e722b15f34c774d43a8f9cf9aa6aad40469d45cd32cead336d4d5c91bfa9560001b611167565b610f957fd586fee78de403acc067979c1beebdf92e2c7a64716d54990f3ea531d31f71bf60001b611167565b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610ff291906113ad565b60405180910390a36110267f213e5b64922777bedd50e13cb50321bd4cbb8bf33d24d3ca15dfe944e2f37c1d60001b611167565b6110527fd30c5df3be0f34b579cb75b6d8ceb7dd6fde4cd1853536abda02de020123c51660001b611167565b6001905092915050565b600061108a7fb245d2943b46849788816e447cedcf5b6016b19d41b9e009a5e1b5a75b7bbf3560001b611167565b6110b67f156d3c3f1b23758f4df71cc3fb681e0faf1db9595731db571ff78d97738f567d60001b611167565b6110e27f43230d53912570755f0ac09a4261e75e6beefc6a8c406f9a247866fd15295d2960001b611167565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b50565b60008135905061117981611650565b92915050565b60008135905061118e81611667565b92915050565b6000602082840312156111a657600080fd5b60006111b48482850161116a565b91505092915050565b600080604083850312156111d057600080fd5b60006111de8582860161116a565b92505060206111ef8582860161116a565b9150509250929050565b60008060006060848603121561120e57600080fd5b600061121c8682870161116a565b935050602061122d8682870161116a565b925050604061123e8682870161117f565b9150509250925092565b6000806040838503121561125b57600080fd5b60006112698582860161116a565b925050602061127a8582860161117f565b9150509250929050565b61128d8161149b565b82525050565b600061129e826113e3565b6112a881856113ee565b93506112b88185602086016114de565b6112c1816115a1565b840191505092915050565b60006112d9602f836113ee565b91506112e4826115b2565b604082019050919050565b60006112fc6039836113ee565b915061130782611601565b604082019050919050565b61131b816114c7565b82525050565b61132a816114d1565b82525050565b60006020820190506113456000830184611284565b92915050565b600060208201905081810360008301526113658184611293565b905092915050565b60006020820190508181036000830152611386816112cc565b9050919050565b600060208201905081810360008301526113a6816112ef565b9050919050565b60006020820190506113c26000830184611312565b92915050565b60006020820190506113dd6000830184611321565b92915050565b600081519050919050565b600082825260208201905092915050565b600061140a826114c7565b9150611415836114c7565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561144a57611449611543565b5b828201905092915050565b6000611460826114c7565b915061146b836114c7565b92508282101561147e5761147d611543565b5b828203905092915050565b6000611494826114a7565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b838110156114fc5780820151818401526020810190506114e1565b8381111561150b576000848401525b50505050565b6000600282049050600182168061152957607f821691505b6020821081141561153d5761153c611572565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f746f6b656e2062616c616e6365206973206c6f776572207468616e207468652060008201527f76616c7565207265717565737465640000000000000000000000000000000000602082015250565b7f746f6b656e2062616c616e6365206f7220616c6c6f77616e6365206973206c6f60008201527f776572207468616e20616d6f756e742072657175657374656400000000000000602082015250565b61165981611489565b811461166457600080fd5b50565b611670816114c7565b811461167b57600080fd5b5056fea2646970667358221220e6a2dbeec6d9028b13306854f69405dd6df37bb6cf4b286d83d20ee2708ff2fe64736f6c63430008040033";

export class USDTest__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _initialAmount: BigNumberish,
    _tokenName: string,
    _decimalUnits: BigNumberish,
    _tokenSymbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<USDTest> {
    return super.deploy(
      _initialAmount,
      _tokenName,
      _decimalUnits,
      _tokenSymbol,
      overrides || {}
    ) as Promise<USDTest>;
  }
  getDeployTransaction(
    _initialAmount: BigNumberish,
    _tokenName: string,
    _decimalUnits: BigNumberish,
    _tokenSymbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _initialAmount,
      _tokenName,
      _decimalUnits,
      _tokenSymbol,
      overrides || {}
    );
  }
  attach(address: string): USDTest {
    return super.attach(address) as USDTest;
  }
  connect(signer: Signer): USDTest__factory {
    return super.connect(signer) as USDTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): USDTestInterface {
    return new utils.Interface(_abi) as USDTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): USDTest {
    return new Contract(address, _abi, signerOrProvider) as USDTest;
  }
}
