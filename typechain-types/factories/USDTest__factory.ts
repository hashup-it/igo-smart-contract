/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { USDTest, USDTestInterface } from "../USDTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_initialAmount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_tokenName",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "_decimalUnits",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "_tokenSymbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "remaining",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001d8438038062001d84833981810160405281019062000037919062000467565b6200006b7f78ef3464d23835edf557dd0816c6d991ee12db017f5739faebdf834bbbe9117260001b6200031460201b60201c565b6200009f7fc1a0ed3ab0dd2aaf0364d0ef48f408163e77a52dac33bfc8afde70aba91f79fc60001b6200031460201b60201c565b620000d37f6f5755f791e1f9efbc936c9bf38243178953e6dd060e592666dc97c13e155d2260001b6200031460201b60201c565b836000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506200014a7f668712d917c4b2c02c79e049292c69ad81897ef1ec214d25a4d63eba97ee648d60001b6200031460201b60201c565b6200017e7fc8e5ca2b6adaff5af028a4fab8ec5081958bd97dbc0afab17537a7a9fb45d90860001b6200031460201b60201c565b83600281905550620001b97f85315db58bbc19b535e733d69a6eeed17f393edd21b5d0c85479382dc8f066c960001b6200031460201b60201c565b620001ed7fe77d8ffc6849ebc215fb27641e2a34b90e270ede49a1377f6f1245b7a08997bf60001b6200031460201b60201c565b82600390805190602001906200020592919062000317565b506200023a7f2c2c1b1deae77a0dc4f0773dc91046c77d053d6f2cdded381a24eb5f81d5ad2760001b6200031460201b60201c565b6200026e7f6903c4d9f143e9d522bbfb22b927f80d43ece0e3ebd10abb21679b9d34704a8960001b6200031460201b60201c565b81600460006101000a81548160ff021916908360ff160217905550620002bd7f18d7a31bc4c3d9ae02df7a871148a3facbf76120f184306e51ff43cb8dc89c2160001b6200031460201b60201c565b620002f17fee4b054b568030e7a43b35f514c346e8422388a5709528d1334b99530fb5354e60001b6200031460201b60201c565b80600590805190602001906200030992919062000317565b5050505050620006c0565b50565b8280546200032590620005b1565b90600052602060002090601f01602090048101928262000349576000855562000395565b82601f106200036457805160ff191683800117855562000395565b8280016001018555821562000395579182015b828111156200039457825182559160200191906001019062000377565b5b509050620003a49190620003a8565b5090565b5b80821115620003c3576000816000905550600101620003a9565b5090565b6000620003de620003d8846200052e565b62000505565b905082815260208101848484011115620003f757600080fd5b620004048482856200057b565b509392505050565b600082601f8301126200041e57600080fd5b815162000430848260208601620003c7565b91505092915050565b6000815190506200044a816200068c565b92915050565b6000815190506200046181620006a6565b92915050565b600080600080608085870312156200047e57600080fd5b60006200048e8782880162000439565b945050602085015167ffffffffffffffff811115620004ac57600080fd5b620004ba878288016200040c565b9350506040620004cd8782880162000450565b925050606085015167ffffffffffffffff811115620004eb57600080fd5b620004f9878288016200040c565b91505092959194509250565b60006200051162000524565b90506200051f8282620005e7565b919050565b6000604051905090565b600067ffffffffffffffff8211156200054c576200054b6200064c565b5b62000557826200067b565b9050602081019050919050565b6000819050919050565b600060ff82169050919050565b60005b838110156200059b5780820151818401526020810190506200057e565b83811115620005ab576000848401525b50505050565b60006002820490506001821680620005ca57607f821691505b60208210811415620005e157620005e06200061d565b5b50919050565b620005f2826200067b565b810181811067ffffffffffffffff821117156200061457620006136200064c565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b620006978162000564565b8114620006a357600080fd5b50565b620006b1816200056e565b8114620006bd57600080fd5b50565b6116b480620006d06000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063313ce56711610071578063313ce5671461017a5780635c6581651461019857806370a08231146101c857806395d89b41146101f8578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a57806327e235e31461014a575b600080fd5b6100b6610276565b6040516100c3919061134b565b60405180910390f35b6100e660048036038101906100e19190611248565b610304565b6040516100f39190611330565b60405180910390f35b61010461052a565b60405161011191906113ad565b60405180910390f35b610134600480360381019061012f91906111f9565b610530565b6040516101419190611330565b60405180910390f35b610164600480360381019061015f9190611194565b610ada565b60405161017191906113ad565b60405180910390f35b610182610af2565b60405161018f91906113c8565b60405180910390f35b6101b260048036038101906101ad91906111bd565b610b05565b6040516101bf91906113ad565b60405180910390f35b6101e260048036038101906101dd9190611194565b610b2a565b6040516101ef91906113ad565b60405180910390f35b610200610bf6565b60405161020d919061134b565b60405180910390f35b610230600480360381019061022b9190611248565b610c84565b60405161023d9190611330565b60405180910390f35b610260600480360381019061025b91906111bd565b61105c565b60405161026d91906113ad565b60405180910390f35b6003805461028390611511565b80601f01602080910402602001604051908101604052809291908181526020018280546102af90611511565b80156102fc5780601f106102d1576101008083540402835291602001916102fc565b820191906000526020600020905b8154815290600101906020018083116102df57829003601f168201915b505050505081565b60006103327f666a14fc6b245a5c4b0ebd531aaf1ec65837c1889e605118191a4d21e6c0d43560001b611167565b61035e7f8fb47958bb773461e861281783081ace6ef380a7d41028f39312e651455d529b60001b611167565b61038a7f286e7fd65836fbc162060cb1f4956b61edc5db626e85ea2d3409e6b6a9517efb60001b611167565b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506104377f6b0b7793d0a33e148d238ebd6662e9f04052b3a7423895a4f845fc0f6257647860001b611167565b6104637fd9dee96a330e5c8c539a46063338ec484c4b21b94014f4058e3061e6fa61262160001b611167565b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516104c091906113ad565b60405180910390a36104f47f1715d1c8027b39dbda28d78ccf5ebdb4b18912d720e27a71fd52e81ba6d4150660001b611167565b6105207fe4b189a9459174e05eaee6b3b0e2eea5bcd21df530569893404b3596126e083a60001b611167565b6001905092915050565b60025481565b600061055e7fa68e5d469d8d84ecefddea211f3317dc5278510802d73482026fbf79969ef74c60001b611167565b61058a7fe669011a8f374b6ca342e61f119bb66119fc906e543f479fa10b038cf919eee460001b611167565b6105b67fc6b725aa58e15c9d38ac3294d0ee0d998aab6cac3e3c253a6a419ae5c256b6d460001b611167565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506106637f637210ff295915674ed469216ead4f14a78869a2b7b89dde82e6f7fe1533299060001b611167565b61068f7fd029199b8b0bb385fe310a36d59c11a21d9b821cb0807e1dc3966fd2cf61141660001b611167565b6106bb7fdddac247406dd39cb8975ae8ccfc2a14aa33f179e0af4d8b6900c3a9a653d3ad60001b611167565b826000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101580156107095750828110155b610748576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073f9061138d565b60405180910390fd5b6107747f5e0b3cb11964df7eacd9d296f01421b33cd760111bf6ecc2eff392fff0f5d60d60001b611167565b6107a07f9f102480504d447c63d7eaf097a231004d03b2faf5ff5d019790f3430a309ce460001b611167565b6107cc7fbd11674fdcd226cd4caf60dc36871e899577cd40485fd5e1999dd7305dd13d3960001b611167565b826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461081a91906113ff565b9250508190555061084d7fc24d408e5c74dd6768fba116e41ae6cb0e572939a288dac055c7cc9fc4bc970360001b611167565b6108797fb658232e93a1d8042e7cdc3bfc6d8ba6db7c340481e309518ae58873cf80a7d960001b611167565b826000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546108c79190611455565b925050819055506108fa7f86d5396f9336e1708070086c8bd6df849bea8ecb75b0713600c6c69256546b2560001b611167565b6109267fbf487f3ef7dc322b124d02ab59a37039567ab1ed04b058ee75a76cb32a7e6e3e60001b611167565b82600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109b29190611455565b925050819055506109e57fbed1617381da9fec8e4da8c7fbd72d5afe0f80a5abe789991bc04e1b7bf4174860001b611167565b610a117f7b9b09849287ae5c2ca2fa0446ad853f887478a84279022228cefdb293468f7c60001b611167565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef85604051610a6e91906113ad565b60405180910390a3610aa27fa30390d12b4f97d3732b74df15137bfbbda29b7a5e53c02eaf1d644677c0ecfc60001b611167565b610ace7fbab3ba24689ceb4861ee454fdc414f7d4cdc82dae3b245eeb6ab74bde7c37c0160001b611167565b60019150509392505050565b60006020528060005260406000206000915090505481565b600460009054906101000a900460ff1681565b6001602052816000526040600020602052806000526040600020600091509150505481565b6000610b587f169567045d39b581a8e6b67bc5c717c8b36722b803eef52addf149edbe52ed1660001b611167565b610b847f2fc8edf6f9fbd89c89e61e0fe090f27b841bc8ce8007fa5e9ba6205c054aa3a560001b611167565b610bb07fc62d27867cfaaf42df66415869c7628941c9e7e623314087216158a0f4189c5260001b611167565b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60058054610c0390611511565b80601f0160208091040260200160405190810160405280929190818152602001828054610c2f90611511565b8015610c7c5780601f10610c5157610100808354040283529160200191610c7c565b820191906000526020600020905b815481529060010190602001808311610c5f57829003601f168201915b505050505081565b6000610cb27f06ca82df66623bc007d10c73bbd963828f8cc837d32164804bbe3e18f14cf65660001b611167565b610cde7ff5e073512e54fa47d932ccde016aec3757ef68988baf26c8a1af54b50d0a0e1860001b611167565b610d0a7f683c07d58561fd89313b7182022d5565d66b6ef67f89db4d498c9519ac9f050260001b611167565b610d367f9ac76a10279870b9aeb0eecc7f711f7a08858b529a8d98c1929d8f3e87dfd2f360001b611167565b816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610db7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dae9061136d565b60405180910390fd5b610de37fbfd4644110ec8fb8dacbaa36d1685608b9d90a8f2ce3b5b3d8fe6725fffe5a7a60001b611167565b610e0f7f93718b3a4513b2cb185b04559d4aee9d7e2c5856bba653c21956de44e940b21060001b611167565b610e3b7f171a094de05bea8eb4b11c7963d77ca8ad42d26e24ed68a4c8e29723b34d212360001b611167565b816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e899190611455565b92505081905550610ebc7fe4cf03e605f79ea6db2777d4e00c6084a419c74b52f14501e4a1cdc9ae7a36c760001b611167565b610ee87fe46f484ca8eab6efb5262faeeaa8d30b155c2edcbbc3e30c1c2ef7400105832d60001b611167565b816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610f3691906113ff565b92505081905550610f697fbc1121dcb42de87363972d67d52c2a3733e0d4b8d159ef5274f0f5e17c89f8a360001b611167565b610f957f1735ab863cf338fed2d7df6f38ec00515bd561d4e118d12e14a9ec8c3aa53a5e60001b611167565b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610ff291906113ad565b60405180910390a36110267f05c60a42b743c3978513401997c4cde21c0bd794d4a25246ed620e1a1f6d257860001b611167565b6110527f2afd3ec018ab45c0016b77de4f6629efcce43a4e9896ca4ebf3dc07dcd33170860001b611167565b6001905092915050565b600061108a7f066d528f0027867f9c1e843ec287d857761bcbb753b18f24c904fc48b009e14160001b611167565b6110b67f54bef0120ae707880b6f770c1e40f81a8b58dff63b7d5d17bb8ab8c3c077662360001b611167565b6110e27f81d30245b641d130925a2b9cea09299a30a8b2392230384fcb47f4e652743eb560001b611167565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b50565b60008135905061117981611650565b92915050565b60008135905061118e81611667565b92915050565b6000602082840312156111a657600080fd5b60006111b48482850161116a565b91505092915050565b600080604083850312156111d057600080fd5b60006111de8582860161116a565b92505060206111ef8582860161116a565b9150509250929050565b60008060006060848603121561120e57600080fd5b600061121c8682870161116a565b935050602061122d8682870161116a565b925050604061123e8682870161117f565b9150509250925092565b6000806040838503121561125b57600080fd5b60006112698582860161116a565b925050602061127a8582860161117f565b9150509250929050565b61128d8161149b565b82525050565b600061129e826113e3565b6112a881856113ee565b93506112b88185602086016114de565b6112c1816115a1565b840191505092915050565b60006112d9602f836113ee565b91506112e4826115b2565b604082019050919050565b60006112fc6039836113ee565b915061130782611601565b604082019050919050565b61131b816114c7565b82525050565b61132a816114d1565b82525050565b60006020820190506113456000830184611284565b92915050565b600060208201905081810360008301526113658184611293565b905092915050565b60006020820190508181036000830152611386816112cc565b9050919050565b600060208201905081810360008301526113a6816112ef565b9050919050565b60006020820190506113c26000830184611312565b92915050565b60006020820190506113dd6000830184611321565b92915050565b600081519050919050565b600082825260208201905092915050565b600061140a826114c7565b9150611415836114c7565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561144a57611449611543565b5b828201905092915050565b6000611460826114c7565b915061146b836114c7565b92508282101561147e5761147d611543565b5b828203905092915050565b6000611494826114a7565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b838110156114fc5780820151818401526020810190506114e1565b8381111561150b576000848401525b50505050565b6000600282049050600182168061152957607f821691505b6020821081141561153d5761153c611572565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f746f6b656e2062616c616e6365206973206c6f776572207468616e207468652060008201527f76616c7565207265717565737465640000000000000000000000000000000000602082015250565b7f746f6b656e2062616c616e6365206f7220616c6c6f77616e6365206973206c6f60008201527f776572207468616e20616d6f756e742072657175657374656400000000000000602082015250565b61165981611489565b811461166457600080fd5b50565b611670816114c7565b811461167b57600080fd5b5056fea26469706673582212206731ae711bf972d395ed72e2f6f02bef73e5c0c298d3ee9b6a10c97efc4314ce64736f6c63430008040033";

export class USDTest__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _initialAmount: BigNumberish,
    _tokenName: string,
    _decimalUnits: BigNumberish,
    _tokenSymbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<USDTest> {
    return super.deploy(
      _initialAmount,
      _tokenName,
      _decimalUnits,
      _tokenSymbol,
      overrides || {}
    ) as Promise<USDTest>;
  }
  getDeployTransaction(
    _initialAmount: BigNumberish,
    _tokenName: string,
    _decimalUnits: BigNumberish,
    _tokenSymbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _initialAmount,
      _tokenName,
      _decimalUnits,
      _tokenSymbol,
      overrides || {}
    );
  }
  attach(address: string): USDTest {
    return super.attach(address) as USDTest;
  }
  connect(signer: Signer): USDTest__factory {
    return super.connect(signer) as USDTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): USDTestInterface {
    return new utils.Interface(_abi) as USDTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): USDTest {
    return new Contract(address, _abi, signerOrProvider) as USDTest;
  }
}
