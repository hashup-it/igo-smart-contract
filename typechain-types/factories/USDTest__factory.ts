/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { USDTest, USDTestInterface } from "../USDTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_initialAmount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_tokenName",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "_decimalUnits",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "_tokenSymbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "remaining",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001d8438038062001d84833981810160405281019062000037919062000467565b6200006b7f176077a258558252bd21a19bbe4c4785adf842c49fbd187ce5687b8e9891c78260001b6200031460201b60201c565b6200009f7f425d4c438dd95ed02864db7cae5d1f790a92dba1198f098fb112c54df593746c60001b6200031460201b60201c565b620000d37fb245d2943b46849788816e447cedcf5b6016b19d41b9e009a5e1b5a75b7bbf3560001b6200031460201b60201c565b836000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506200014a7f156d3c3f1b23758f4df71cc3fb681e0faf1db9595731db571ff78d97738f567d60001b6200031460201b60201c565b6200017e7f43230d53912570755f0ac09a4261e75e6beefc6a8c406f9a247866fd15295d2960001b6200031460201b60201c565b83600281905550620001b97fa2c0bbca9aa38691a69007e7bfd13d8bb55d4c049b79c9a0f3e9788331ec8d4a60001b6200031460201b60201c565b620001ed7f2f52130c90eaedcad3be1ff26c07813c046a4bc21cee5ce39e787556282233bf60001b6200031460201b60201c565b82600390805190602001906200020592919062000317565b506200023a7f8d515aa4b10765240034e378565b6ddeedb2126aa02e05cd0bcf8305c5b609d660001b6200031460201b60201c565b6200026e7f782b50d73bafaa3c5c1a37196d06d1e48923a7672294ad34d842ab36c0bc8e7360001b6200031460201b60201c565b81600460006101000a81548160ff021916908360ff160217905550620002bd7f7c2bf0964b0fba0a033a27e9eb88ffaeb578af50a792ce83097663cb5fbd059160001b6200031460201b60201c565b620002f17ff282b552a127a4b9a3aa8bd87e73dd9ed7520f0fc902691870010ea3c881b0c960001b6200031460201b60201c565b80600590805190602001906200030992919062000317565b5050505050620006c0565b50565b8280546200032590620005b1565b90600052602060002090601f01602090048101928262000349576000855562000395565b82601f106200036457805160ff191683800117855562000395565b8280016001018555821562000395579182015b828111156200039457825182559160200191906001019062000377565b5b509050620003a49190620003a8565b5090565b5b80821115620003c3576000816000905550600101620003a9565b5090565b6000620003de620003d8846200052e565b62000505565b905082815260208101848484011115620003f757600080fd5b620004048482856200057b565b509392505050565b600082601f8301126200041e57600080fd5b815162000430848260208601620003c7565b91505092915050565b6000815190506200044a816200068c565b92915050565b6000815190506200046181620006a6565b92915050565b600080600080608085870312156200047e57600080fd5b60006200048e8782880162000439565b945050602085015167ffffffffffffffff811115620004ac57600080fd5b620004ba878288016200040c565b9350506040620004cd8782880162000450565b925050606085015167ffffffffffffffff811115620004eb57600080fd5b620004f9878288016200040c565b91505092959194509250565b60006200051162000524565b90506200051f8282620005e7565b919050565b6000604051905090565b600067ffffffffffffffff8211156200054c576200054b6200064c565b5b62000557826200067b565b9050602081019050919050565b6000819050919050565b600060ff82169050919050565b60005b838110156200059b5780820151818401526020810190506200057e565b83811115620005ab576000848401525b50505050565b60006002820490506001821680620005ca57607f821691505b60208210811415620005e157620005e06200061d565b5b50919050565b620005f2826200067b565b810181811067ffffffffffffffff821117156200061457620006136200064c565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b620006978162000564565b8114620006a357600080fd5b50565b620006b1816200056e565b8114620006bd57600080fd5b50565b6116b480620006d06000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063313ce56711610071578063313ce5671461017a5780635c6581651461019857806370a08231146101c857806395d89b41146101f8578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a57806327e235e31461014a575b600080fd5b6100b6610276565b6040516100c3919061134b565b60405180910390f35b6100e660048036038101906100e19190611248565b610304565b6040516100f39190611330565b60405180910390f35b61010461052a565b60405161011191906113ad565b60405180910390f35b610134600480360381019061012f91906111f9565b610530565b6040516101419190611330565b60405180910390f35b610164600480360381019061015f9190611194565b610ada565b60405161017191906113ad565b60405180910390f35b610182610af2565b60405161018f91906113c8565b60405180910390f35b6101b260048036038101906101ad91906111bd565b610b05565b6040516101bf91906113ad565b60405180910390f35b6101e260048036038101906101dd9190611194565b610b2a565b6040516101ef91906113ad565b60405180910390f35b610200610bf6565b60405161020d919061134b565b60405180910390f35b610230600480360381019061022b9190611248565b610c84565b60405161023d9190611330565b60405180910390f35b610260600480360381019061025b91906111bd565b61105c565b60405161026d91906113ad565b60405180910390f35b6003805461028390611511565b80601f01602080910402602001604051908101604052809291908181526020018280546102af90611511565b80156102fc5780601f106102d1576101008083540402835291602001916102fc565b820191906000526020600020905b8154815290600101906020018083116102df57829003601f168201915b505050505081565b60006103327fc8e5ca2b6adaff5af028a4fab8ec5081958bd97dbc0afab17537a7a9fb45d90860001b611167565b61035e7f85315db58bbc19b535e733d69a6eeed17f393edd21b5d0c85479382dc8f066c960001b611167565b61038a7fe77d8ffc6849ebc215fb27641e2a34b90e270ede49a1377f6f1245b7a08997bf60001b611167565b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506104377f2c2c1b1deae77a0dc4f0773dc91046c77d053d6f2cdded381a24eb5f81d5ad2760001b611167565b6104637f6903c4d9f143e9d522bbfb22b927f80d43ece0e3ebd10abb21679b9d34704a8960001b611167565b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516104c091906113ad565b60405180910390a36104f47f18d7a31bc4c3d9ae02df7a871148a3facbf76120f184306e51ff43cb8dc89c2160001b611167565b6105207fee4b054b568030e7a43b35f514c346e8422388a5709528d1334b99530fb5354e60001b611167565b6001905092915050565b60025481565b600061055e7fe0c7e1c20893d6b736c8edf0e7bc12be96ae0b8cb03a6ad98a23d345b6ed9d0f60001b611167565b61058a7f2d6f719d19147904e31317e8ea4ace2f8b7d3e5db3e565aa7d04a4de084bbf6d60001b611167565b6105b67fe25957998a2f39cdeba7466258262dabc26e132c961ac4a7913b0ab07d9703be60001b611167565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506106637f258a8edd0c4483bc0d3b974278811689ede85e9bcbca364bb92fb6b6b39fb12360001b611167565b61068f7f5de66006a36b6440e996b94c54e804f231e8efd4d98e6adc27dbb2e49f41c6f160001b611167565b6106bb7f1e530ab44fa23c3b5d8a4c4666892a2145439bf3c53f26dba8f174d21d15a10460001b611167565b826000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101580156107095750828110155b610748576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073f9061138d565b60405180910390fd5b6107747f853da3db011848d25f8fa5278cc3ab61db0c6a5642c27e11763eaebbd1cc104b60001b611167565b6107a07fc9deff3b9231d346741c884fd6b7228f6658ffa66ebf146e0549830cb5fc90bd60001b611167565b6107cc7fd1b96235a7a04b927a8b7d12b252ae6ea2e816c02bbbe95cba113f0d658d4b9260001b611167565b826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461081a91906113ff565b9250508190555061084d7fc1a627909826104f4b6cb7639a4ef42d1fe9b21c7e512ddc17d7073d72321cf960001b611167565b6108797fa1e5a67c3b39070ad7b5be6c12c61a2c8020e8c685f565d5bda7d70ac1ecc35660001b611167565b826000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546108c79190611455565b925050819055506108fa7ff269c4bc662da650537e0d7c4426051b7c19fe5e6e9701de85d91ffcc1d98e2e60001b611167565b6109267f1088c1b0b7c4cd364a43b54d979770f7cb846ee5083c09251393eb765023f0f860001b611167565b82600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109b29190611455565b925050819055506109e57f033c02dc0e121f34fe57e271f01bdee661b4bd5702c84e8f54d2fedcc5dbcb0760001b611167565b610a117f42c5bc77e7bc353d1b14e8df4e9499697eff0656326ee1c7ada03e3dd440a68a60001b611167565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef85604051610a6e91906113ad565b60405180910390a3610aa27ff51e1303842598e9841bce20b6d1e5a0829d798bbd38ca4edf024c00008aebd960001b611167565b610ace7f78ef3464d23835edf557dd0816c6d991ee12db017f5739faebdf834bbbe9117260001b611167565b60019150509392505050565b60006020528060005260406000206000915090505481565b600460009054906101000a900460ff1681565b6001602052816000526040600020602052806000526040600020600091509150505481565b6000610b587fc1a0ed3ab0dd2aaf0364d0ef48f408163e77a52dac33bfc8afde70aba91f79fc60001b611167565b610b847f6f5755f791e1f9efbc936c9bf38243178953e6dd060e592666dc97c13e155d2260001b611167565b610bb07f668712d917c4b2c02c79e049292c69ad81897ef1ec214d25a4d63eba97ee648d60001b611167565b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60058054610c0390611511565b80601f0160208091040260200160405190810160405280929190818152602001828054610c2f90611511565b8015610c7c5780601f10610c5157610100808354040283529160200191610c7c565b820191906000526020600020905b815481529060010190602001808311610c5f57829003601f168201915b505050505081565b6000610cb27fb21902fa87561b51a0e41dd69204a9474defbed1b709136a13d3ccba423394d960001b611167565b610cde7f44375805ca12b9231b737299bd3e99a8f618fd44083c4d763a010078fc808f6560001b611167565b610d0a7f65917178e441b6959ebf23f6f314f0da4c9acbb074bf02480623ce07c0695a8b60001b611167565b610d367f433f10e7fee357d0b6bf515604eac53379cb914ddda3a1a6239e8b4b4d9ef98b60001b611167565b816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610db7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dae9061136d565b60405180910390fd5b610de37f01f5b3813da94e300faa789e41b601fdad70009f4d7b108801319475c03c964360001b611167565b610e0f7f41f1abae922e51d84f7eac8b74b3bd1123e07d2b732a4708f37423e537820e3e60001b611167565b610e3b7f69b7e9d38c4addc3f3a74fe203480fbab0f7df26e560a0c10f16ddcd237d130660001b611167565b816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e899190611455565b92505081905550610ebc7f8434bfe87caacaa2fb0f9293b224b01985a57922b5eb331809f8cf04ab29f04360001b611167565b610ee87f86c5060a1b4e308af3e2025826f8928e0e4dcb8c752587ff2d82c43e15edbf7c60001b611167565b816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610f3691906113ff565b92505081905550610f697f7deb4cd7a355623d7c0dee947dbade9d724f9e2604914db0c6361cd00059753c60001b611167565b610f957f88f65ff486491e9e6b225bf13b7e5dae636d75a0b18f0410fa220ab73794a1b160001b611167565b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610ff291906113ad565b60405180910390a36110267ffcb5bbabf7e0aa0fddc9ef98317aaf2dd5f1523de9fd24243685f2d1bc113a9c60001b611167565b6110527f1ca75b04b64dabe86357ffb8bdeab0bb34f149dd8f7999d3b1b485660504e51960001b611167565b6001905092915050565b600061108a7f06ca82df66623bc007d10c73bbd963828f8cc837d32164804bbe3e18f14cf65660001b611167565b6110b67ff5e073512e54fa47d932ccde016aec3757ef68988baf26c8a1af54b50d0a0e1860001b611167565b6110e27f683c07d58561fd89313b7182022d5565d66b6ef67f89db4d498c9519ac9f050260001b611167565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b50565b60008135905061117981611650565b92915050565b60008135905061118e81611667565b92915050565b6000602082840312156111a657600080fd5b60006111b48482850161116a565b91505092915050565b600080604083850312156111d057600080fd5b60006111de8582860161116a565b92505060206111ef8582860161116a565b9150509250929050565b60008060006060848603121561120e57600080fd5b600061121c8682870161116a565b935050602061122d8682870161116a565b925050604061123e8682870161117f565b9150509250925092565b6000806040838503121561125b57600080fd5b60006112698582860161116a565b925050602061127a8582860161117f565b9150509250929050565b61128d8161149b565b82525050565b600061129e826113e3565b6112a881856113ee565b93506112b88185602086016114de565b6112c1816115a1565b840191505092915050565b60006112d9602f836113ee565b91506112e4826115b2565b604082019050919050565b60006112fc6039836113ee565b915061130782611601565b604082019050919050565b61131b816114c7565b82525050565b61132a816114d1565b82525050565b60006020820190506113456000830184611284565b92915050565b600060208201905081810360008301526113658184611293565b905092915050565b60006020820190508181036000830152611386816112cc565b9050919050565b600060208201905081810360008301526113a6816112ef565b9050919050565b60006020820190506113c26000830184611312565b92915050565b60006020820190506113dd6000830184611321565b92915050565b600081519050919050565b600082825260208201905092915050565b600061140a826114c7565b9150611415836114c7565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561144a57611449611543565b5b828201905092915050565b6000611460826114c7565b915061146b836114c7565b92508282101561147e5761147d611543565b5b828203905092915050565b6000611494826114a7565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b838110156114fc5780820151818401526020810190506114e1565b8381111561150b576000848401525b50505050565b6000600282049050600182168061152957607f821691505b6020821081141561153d5761153c611572565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f746f6b656e2062616c616e6365206973206c6f776572207468616e207468652060008201527f76616c7565207265717565737465640000000000000000000000000000000000602082015250565b7f746f6b656e2062616c616e6365206f7220616c6c6f77616e6365206973206c6f60008201527f776572207468616e20616d6f756e742072657175657374656400000000000000602082015250565b61165981611489565b811461166457600080fd5b50565b611670816114c7565b811461167b57600080fd5b5056fea26469706673582212202fa078d04f0156c4dfb7f67ce14b33a1584585cf86ba33be09049aa32ef3ddf764736f6c63430008040033";

export class USDTest__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _initialAmount: BigNumberish,
    _tokenName: string,
    _decimalUnits: BigNumberish,
    _tokenSymbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<USDTest> {
    return super.deploy(
      _initialAmount,
      _tokenName,
      _decimalUnits,
      _tokenSymbol,
      overrides || {}
    ) as Promise<USDTest>;
  }
  getDeployTransaction(
    _initialAmount: BigNumberish,
    _tokenName: string,
    _decimalUnits: BigNumberish,
    _tokenSymbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _initialAmount,
      _tokenName,
      _decimalUnits,
      _tokenSymbol,
      overrides || {}
    );
  }
  attach(address: string): USDTest {
    return super.attach(address) as USDTest;
  }
  connect(signer: Signer): USDTest__factory {
    return super.connect(signer) as USDTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): USDTestInterface {
    return new utils.Interface(_abi) as USDTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): USDTest {
    return new Contract(address, _abi, signerOrProvider) as USDTest;
  }
}
