/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GrayCartridgeTokenV0,
  GrayCartridgeTokenV0Interface,
} from "../GrayCartridgeTokenV0";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_initialAmount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_tokenName",
        type: "string",
      },
      {
        internalType: "string",
        name: "_tokenSymbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_feeForCreator",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_metadataUrl",
        type: "string",
      },
      {
        internalType: "address",
        name: "_hashUpIGO",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "HashUpWallet",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "remaining",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "color",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "creator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeDecimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeForCreator",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feesCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
    ],
    name: "getAmountAfterFees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hashUpIGO",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "metadata",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_metadataURL",
        type: "string",
      },
    ],
    name: "setMetadata",
    outputs: [
      {
        internalType: "string",
        name: "newMetadata",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200217538038062002175833981810160405281019062000037919062000365565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002600a62000087919062000500565b6305f5e1006200009891906200063d565b861115620000a557600080fd5b600083118015620000d357506001600a620000c1919062000500565b6014620000cf91906200063d565b8311155b620000dd57600080fd5b6040518060400160405280600481526020017f6772617900000000000000000000000000000000000000000000000000000000815250600590805190602001906200012a92919062000215565b5085600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555085600a8190555084600290805190602001906200018e92919062000215565b508360039080519060200190620001a792919062000215565b50826007819055508160049080519060200190620001c792919062000215565b5080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050506200086a565b82805462000223906200071f565b90600052602060002090601f01602090048101928262000247576000855562000293565b82601f106200026257805160ff191683800117855562000293565b8280016001018555821562000293579182015b828111156200029257825182559160200191906001019062000275565b5b509050620002a29190620002a6565b5090565b5b80821115620002c1576000816000905550600101620002a7565b5090565b6000620002dc620002d6846200046f565b62000446565b905082815260208101848484011115620002f557600080fd5b62000302848285620006e9565b509392505050565b6000815190506200031b8162000836565b92915050565b600082601f8301126200033357600080fd5b815162000345848260208601620002c5565b91505092915050565b6000815190506200035f8162000850565b92915050565b60008060008060008060c087890312156200037f57600080fd5b60006200038f89828a016200034e565b965050602087015167ffffffffffffffff811115620003ad57600080fd5b620003bb89828a0162000321565b955050604087015167ffffffffffffffff811115620003d957600080fd5b620003e789828a0162000321565b9450506060620003fa89828a016200034e565b935050608087015167ffffffffffffffff8111156200041857600080fd5b6200042689828a0162000321565b92505060a06200043989828a016200030a565b9150509295509295509295565b60006200045262000465565b905062000460828262000755565b919050565b6000604051905090565b600067ffffffffffffffff8211156200048d576200048c620007e9565b5b620004988262000818565b9050602081019050919050565b6000808291508390505b6001851115620004f757808604811115620004cf57620004ce6200078b565b5b6001851615620004df5780820291505b8081029050620004ef8562000829565b9450620004af565b94509492505050565b60006200050d82620006d2565b91506200051a83620006dc565b9250620005497fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848462000551565b905092915050565b60008262000563576001905062000636565b8162000573576000905062000636565b81600181146200058c57600281146200059757620005cd565b600191505062000636565b60ff841115620005ac57620005ab6200078b565b5b8360020a915084821115620005c657620005c56200078b565b5b5062000636565b5060208310610133831016604e8410600b8410161715620006075782820a9050838111156200060157620006006200078b565b5b62000636565b620006168484846001620004a5565b9250905081840481111562000630576200062f6200078b565b5b81810290505b9392505050565b60006200064a82620006d2565b91506200065783620006d2565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156200069357620006926200078b565b5b828202905092915050565b6000620006ab82620006b2565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b8381101562000709578082015181840152602081019050620006ec565b8381111562000719576000848401525b50505050565b600060028204905060018216806200073857607f821691505b602082108114156200074f576200074e620007ba565b5b50919050565b620007608262000818565b810181811067ffffffffffffffff82111715620007825762000781620007e9565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b60008160011c9050919050565b62000841816200069e565b81146200084d57600080fd5b50565b6200085b81620006d2565b81146200086757600080fd5b50565b6118fb806200087a6000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c80635c658165116100b8578063a9059cbb1161007c578063a9059cbb1461037d578063b94f4778146103ad578063cc0f1786146103cb578063cf08fed5146103e9578063dd62ed3e14610407578063e9da0e6c1461043757610137565b80635c658165146102b157806370a08231146102e1578063922f695f1461031157806395d89b411461032f578063a49a1e7d1461034d57610137565b806327e235e3116100ff57806327e235e3146101f6578063313ce56714610226578063392f37e91461024457806341b6a8371461026257806354c3db4e1461029357610137565b806302d05d3f1461013c57806306fdde031461015a578063095ea7b31461017857806318160ddd146101a857806323b872dd146101c6575b600080fd5b610144610455565b6040516101519190611315565b60405180910390f35b61016261047e565b60405161016f919061134b565b60405180910390f35b610192600480360381019061018d919061117e565b61050c565b60405161019f9190611330565b60405180910390f35b6101b06105fe565b6040516101bd91906113fd565b60405180910390f35b6101e060048036038101906101db919061112f565b610604565b6040516101ed9190611330565b60405180910390f35b610210600480360381019061020b91906110ca565b6107be565b60405161021d91906113fd565b60405180910390f35b61022e6107d6565b60405161023b9190611441565b60405180910390f35b61024c6107db565b604051610259919061134b565b60405180910390f35b61027c600480360381019061027791906111fb565b610869565b60405161028a929190611418565b60405180910390f35b61029b61094a565b6040516102a89190611315565b60405180910390f35b6102cb60048036038101906102c691906110f3565b610962565b6040516102d891906113fd565b60405180910390f35b6102fb60048036038101906102f691906110ca565b610987565b60405161030891906113fd565b60405180910390f35b6103196109d0565b6040516103269190611315565b60405180910390f35b6103376109f6565b604051610344919061134b565b60405180910390f35b610367600480360381019061036291906111ba565b610a84565b604051610374919061134b565b60405180910390f35b6103976004803603810190610392919061117e565b610b33565b6040516103a49190611330565b60405180910390f35b6103b5610bcc565b6040516103c291906113fd565b60405180910390f35b6103d3610bd2565b6040516103e09190611441565b60405180910390f35b6103f1610bd7565b6040516103fe919061134b565b60405180910390f35b610421600480360381019061041c91906110f3565b610c65565b60405161042e91906113fd565b60405180910390f35b61043f610cec565b60405161044c91906113fd565b60405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6002805461048b9061167a565b80601f01602080910402602001604051908101604052809291908181526020018280546104b79061167a565b80156105045780601f106104d957610100808354040283529160200191610504565b820191906000526020600020905b8154815290600101906020018083116104e757829003601f168201915b505050505081565b600081600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516105ec91906113fd565b60405180910390a36001905092915050565b600a5481565b600080600960008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082600860008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101580156106d55750828110155b610714576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070b906113dd565b60405180910390fd5b82600960008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107a091906115af565b925050819055506107b2858585610cf2565b60019150509392505050565b60086020528060005260406000206000915090505481565b600281565b600480546107e89061167a565b80601f01602080910402602001604051908101604052809291908181526020018280546108149061167a565b80156108615780601f1061083657610100808354040283529160200191610861565b820191906000526020600020905b81548152906001019060200180831161084457829003601f168201915b505050505081565b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614806108fa57506108cb610455565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16145b1561090b5783600091509150610943565b60006103e86007548661091e9190611555565b6109289190611524565b90506000818661093891906115af565b905080829350935050505b9250929050565b735e798ce8e53a3fe16842c233e8802dc3b09a845181565b6009602052816000526040600020602052806000526040600020600091509150505481565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60038054610a039061167a565b80601f0160208091040260200160405190810160405280929190818152602001828054610a2f9061167a565b8015610a7c5780601f10610a5157610100808354040283529160200191610a7c565b820191906000526020600020905b815481529060010190602001808311610a5f57829003601f168201915b505050505081565b606060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b14576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0b906113bd565b60405180910390fd5b8160049080519060200190610b2a929190610f95565b50819050919050565b600081600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610bb7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bae9061139d565b60405180910390fd5b610bc2338484610cf2565b6001905092915050565b60065481565b600181565b60058054610be49061167a565b80601f0160208091040260200160405190810160405280929190818152602001828054610c109061167a565b8015610c5d5780601f10610c3257610100808354040283529160200191610c5d565b820191906000526020600020905b815481529060010190602001808311610c4057829003601f168201915b505050505081565b6000600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60075481565b600080610cff8386610869565b9150915082600860008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d5291906115af565b9250508190555081600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610da891906114ce565b925050819055508060086000610dbc610455565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e0591906114ce565b925050819055508060066000828254610e1e91906114ce565b92505081905550610e646040518060400160405280600381526020017f666565000000000000000000000000000000000000000000000000000000000081525082610ed0565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef85604051610ec191906113fd565b60405180910390a35050505050565b610f688282604051602401610ee692919061136d565b6040516020818303038152906040527f9710a9d0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610f6c565b5050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b828054610fa19061167a565b90600052602060002090601f016020900481019282610fc3576000855561100a565b82601f10610fdc57805160ff191683800117855561100a565b8280016001018555821561100a579182015b82811115611009578251825591602001919060010190610fee565b5b509050611017919061101b565b5090565b5b8082111561103457600081600090555060010161101c565b5090565b600061104b61104684611481565b61145c565b90508281526020810184848401111561106357600080fd5b61106e848285611638565b509392505050565b60008135905061108581611897565b92915050565b600082601f83011261109c57600080fd5b81356110ac848260208601611038565b91505092915050565b6000813590506110c4816118ae565b92915050565b6000602082840312156110dc57600080fd5b60006110ea84828501611076565b91505092915050565b6000806040838503121561110657600080fd5b600061111485828601611076565b925050602061112585828601611076565b9150509250929050565b60008060006060848603121561114457600080fd5b600061115286828701611076565b935050602061116386828701611076565b9250506040611174868287016110b5565b9150509250925092565b6000806040838503121561119157600080fd5b600061119f85828601611076565b92505060206111b0858286016110b5565b9150509250929050565b6000602082840312156111cc57600080fd5b600082013567ffffffffffffffff8111156111e657600080fd5b6111f28482850161108b565b91505092915050565b6000806040838503121561120e57600080fd5b600061121c858286016110b5565b925050602061122d85828601611076565b9150509250929050565b611240816115e3565b82525050565b61124f816115f5565b82525050565b6000611260826114b2565b61126a81856114bd565b935061127a818560208601611647565b61128381611799565b840191505092915050565b600061129b602f836114bd565b91506112a6826117aa565b604082019050919050565b60006112be6027836114bd565b91506112c9826117f9565b604082019050919050565b60006112e16039836114bd565b91506112ec82611848565b604082019050919050565b61130081611621565b82525050565b61130f8161162b565b82525050565b600060208201905061132a6000830184611237565b92915050565b60006020820190506113456000830184611246565b92915050565b600060208201905081810360008301526113658184611255565b905092915050565b600060408201905081810360008301526113878185611255565b905061139660208301846112f7565b9392505050565b600060208201905081810360008301526113b68161128e565b9050919050565b600060208201905081810360008301526113d6816112b1565b9050919050565b600060208201905081810360008301526113f6816112d4565b9050919050565b600060208201905061141260008301846112f7565b92915050565b600060408201905061142d60008301856112f7565b61143a60208301846112f7565b9392505050565b60006020820190506114566000830184611306565b92915050565b6000611466611477565b905061147282826116ac565b919050565b6000604051905090565b600067ffffffffffffffff82111561149c5761149b61176a565b5b6114a582611799565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b60006114d982611621565b91506114e483611621565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611519576115186116dd565b5b828201905092915050565b600061152f82611621565b915061153a83611621565b92508261154a5761154961170c565b5b828204905092915050565b600061156082611621565b915061156b83611621565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156115a4576115a36116dd565b5b828202905092915050565b60006115ba82611621565b91506115c583611621565b9250828210156115d8576115d76116dd565b5b828203905092915050565b60006115ee82611601565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b82818337600083830152505050565b60005b8381101561166557808201518184015260208101905061164a565b83811115611674576000848401525b50505050565b6000600282049050600182168061169257607f821691505b602082108114156116a6576116a561173b565b5b50919050565b6116b582611799565b810181811067ffffffffffffffff821117156116d4576116d361176a565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f746f6b656e2062616c616e6365206973206c6f776572207468616e207468652060008201527f76616c7565207265717565737465640000000000000000000000000000000000602082015250565b7f4361727472646967654f776e61626c653a2043616c6c6572206973206e6f742060008201527f63726561746f7200000000000000000000000000000000000000000000000000602082015250565b7f746f6b656e2062616c616e6365206f7220616c6c6f77616e6365206973206c6f60008201527f776572207468616e20616d6f756e742072657175657374656400000000000000602082015250565b6118a0816115e3565b81146118ab57600080fd5b50565b6118b781611621565b81146118c257600080fd5b5056fea2646970667358221220f23052cf417929c68947a1e1ae2abfa15f10ca8067e03dd8b2be4e6eaa9aa5cd64736f6c63430008040033";

export class GrayCartridgeTokenV0__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _initialAmount: BigNumberish,
    _tokenName: string,
    _tokenSymbol: string,
    _feeForCreator: BigNumberish,
    _metadataUrl: string,
    _hashUpIGO: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GrayCartridgeTokenV0> {
    return super.deploy(
      _initialAmount,
      _tokenName,
      _tokenSymbol,
      _feeForCreator,
      _metadataUrl,
      _hashUpIGO,
      overrides || {}
    ) as Promise<GrayCartridgeTokenV0>;
  }
  getDeployTransaction(
    _initialAmount: BigNumberish,
    _tokenName: string,
    _tokenSymbol: string,
    _feeForCreator: BigNumberish,
    _metadataUrl: string,
    _hashUpIGO: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _initialAmount,
      _tokenName,
      _tokenSymbol,
      _feeForCreator,
      _metadataUrl,
      _hashUpIGO,
      overrides || {}
    );
  }
  attach(address: string): GrayCartridgeTokenV0 {
    return super.attach(address) as GrayCartridgeTokenV0;
  }
  connect(signer: Signer): GrayCartridgeTokenV0__factory {
    return super.connect(signer) as GrayCartridgeTokenV0__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GrayCartridgeTokenV0Interface {
    return new utils.Interface(_abi) as GrayCartridgeTokenV0Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GrayCartridgeTokenV0 {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as GrayCartridgeTokenV0;
  }
}
